{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\n<!--The content below is only a placeholder and can be replaced.-->\\n    <app-login></app-login>\\n<!-- <app-login1></app-login1> -->\\n    <app-footer></app-footer>\\n    <router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'invisionAngular';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LoginComponent } from './login/login.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatStepperModule } from '@angular/material/stepper';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    MatRadioModule,\n    MatStepperModule\n\n  ],\n  exports: [ReactiveFormsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<footer class=\\\"mainFooter\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"footerContent\\\">\\n        <div class=\\\"address\\\">\\n          <ul>\\n            <li class=\\\"desktop\\\">לורם איפסום</li>\\n            <li>לורם איפסום <i class=\\\"tiny material-icons\\\">local_phone</i></li>\\n            <li>לורם איפסום <i class=\\\"tiny material-icons\\\">lock_outline</i></li>\\n          </ul>\\n          <p class=\\\"mobile\\\"><img src=\\\"../../invision/images/relax-icon.png\\\" alt=\\\"\\\"> לורם איפסום</p>\\n        </div>\\n        <p>לורם Ipsum הוא פשוט טקסט דמה של תעשיית דפוס ו סדור. לורם Ipsum כבר טקסט של תעשיית הדמה סטנדרטי מאז 1500s, כאשר מדפסת לא ידוע לקח מטחנת של סוג ו מקושקשות זה כדי להפוך את הספר סוג הדגימה. הוא שרד לא רק חמש מאות שנים, אלא גם את הקפיצה לתוך דפוס אלקטרוניים, שנותרו למעשה ללא שינוי. זה היה פופולרי ב 1960s עם שחרורו של גיליונות Letraset המכיל מעברים Lorem Ipsum, ולאחרונה עם תוכנת פרסום שולחני כמו Aldus PageMaker כולל גרסאות של לורם Ipsum.</p>\\n      </div>\\n    </div>\\n  </footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<header>\\n  <div class=\\\"headerTop\\\"> <img src=\\\"../../invision/assets/images/top-logo.png\\\" class=\\\"img-fluid\\\" alt=\\\"\\\"> </div>\\n  <div class=\\\"headerBottom\\\"> <img src=\\\"../../invision/assets/images/logo.png\\\" class=\\\"img-fluid\\\" alt=\\\"\\\"> </div>\\n</header>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"contentSection\\\">\\n    <div class=\\\"grid-row align-items-center no-gutters\\\">\\n      <div class=\\\"grid-col-sm-6\\\">\\n        <div class=\\\"leftSection\\\"> <img src=\\\"../../invision/assets/images/-e-coffee.png\\\" class=\\\"img-fluid\\\" alt=\\\"\\\"> </div>\\n      </div>\\n      <div class=\\\"grid-col-sm-6\\\">\\n        <div class=\\\"rightSection\\\"> <img src=\\\"../../invision/assets/images/-e-pen.png\\\" alt=\\\"\\\">\\n          <h1>כניסה למערכת <br>\\n            חתימה על מסמכים</h1>\\n          <form *ngIf=\\\"step ==1 || step ==2\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label> <span>הזן מספר זיהוי / דרכון</span></label>\\n              <mat-radio-group aria-label=\\\"Select an option\\\" formControlName=\\\"role\\\" name=\\\"role\\\">\\n                <mat-radio-button value=\\\"role1\\\"></mat-radio-button>\\n\\n                <label> <span>&nbsp;</span><strong>ת”ז</strong> </label>\\n\\n                <mat-radio-button value=\\\"role2\\\"></mat-radio-button>\\n                <label><span>&nbsp;</span><strong>דרכון</strong> </label>\\n\\n              </mat-radio-group>\\n              <div *ngIf=\\\"submitted && f.role.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.role.errors.required\\\">role is required</div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n\\n              <mat-form-field class=\\\"example-full-width\\\">\\n\\n                <input matInput type=\\\"text\\\" formControlName=\\\"number\\\" placeholder=\\\"מספר בן 9 ספרות כולל ספרת ביקורת\\\"\\n                  maxlength='9' class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.number.errors }\\\" />\\n              </mat-form-field>\\n              <div *ngIf=\\\"submitted && f.number.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.number.errors.required\\\">number is required</div>\\n                <div *ngIf=\\\"f.number.errors.minlength\\\">number must be at least 9 characters</div>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"step ==2\\\" class=\\\"form-group\\\">\\n\\n              <mat-form-field class=\\\"example-full-width\\\">\\n\\n                <input matInput type=\\\"text\\\" formControlName=\\\"proposalNumber\\\" placeholder=\\\"הזן מספר הצעה\\\" maxlength='9'\\n                  class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.proposalNumber.errors }\\\" />\\n              </mat-form-field>\\n              <div *ngIf=\\\"submitted && f.proposalNumber.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.proposalNumber.errors.required\\\">proposalNumber is required</div>\\n              </div>\\n            </div>\\n\\n\\n\\n            <p class=\\\"terms\\\">לאחר אישורך ישלח אלייך קוד אימות לנייד הרשום<br>\\n              במערכת הבנק. בכל בעיה יש לפנות למוקד השירות <br>\\n              בטלפון 5727* </p>\\n            <p class=\\\"text-center\\\">\\n              <button type=\\\"submit\\\" class=\\\"waves-effect waves-light btn-large\\\"><i\\n                  class=\\\"material-icons\\\">המשך</i></button>\\n            </p>\\n          </form>\\n\\n          <div *ngIf=\\\"step ==3\\\">\\n            <p class=\\\"txtLarge\\\">להשלמת התהליך לחץ על כפתור ‘שלח קוד’, וקבל קוד אימות לטלפון הנייד שברשותך, שמספרו\\n              050-xxx6523</p>\\n            <form [formGroup]=\\\"stepForm2\\\" (ngSubmit)=\\\"submitAfterStep2()\\\">\\n              <div class=\\\"checkbox\\\">\\n                <label>\\n                  <input type=\\\"checkbox\\\" formControlName=\\\"checkbox\\\" class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f2.checkbox.errors }\\\" class=\\\"filled-in\\\" checked=\\\"checked\\\" />\\n\\n                  <span>&nbsp;</span><strong>מעוניין בקבלת קוד אימות קולי <br>\\n                    בשיחה נכנסת</strong> </label>\\n              </div>\\n              <div *ngIf=\\\"submitted && f2.checkbox.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f2.checkbox.errors.required\\\">please select the checkbox</div>\\n              </div>\\n              <p class=\\\"text-center\\\">\\n                <button type=\\\"submit\\\" class=\\\"waves-effect waves-light btn-large\\\"><i class=\\\"material-icons\\\">שלח\\n                    קוד</i></button>\\n              </p>\\n            </form>\\n          </div>\\n          <div *ngIf=\\\"step ==4\\\">\\n            <p class=\\\"txtLarge\\\">הזן את הקוד שנשלח:</p>\\n            <form [formGroup]=\\\"stepForm3\\\" (ngSubmit)=\\\"submitAfterStep3()\\\">\\n              <div class=\\\"form-group\\\">\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n\\n                  <input matInput type=\\\"text\\\" formControlName=\\\"verificationCode\\\"\\n                    placeholder=\\\"מספר בן 9 ספרות כולל ספרת ביקורת\\\" maxlength='9' class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f3.verificationCode.errors }\\\" />\\n                </mat-form-field>\\n                <div *ngIf=\\\"submitted && f3.verificationCode.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f3.verificationCode.errors.required\\\">verification code is required</div>\\n                </div>\\n              </div>\\n              <p>&nbsp;</p>\\n              <p class=\\\"text-center\\\">\\n                <button type=\\\"submit\\\" class=\\\"waves-effect waves-light btn-large\\\"><i\\n                    class=\\\"material-icons\\\">התחבר</i></button>\\n              </p>\\n            </form>\\n          </div>\\n          <div *ngIf=\\\"step ==5\\\">\\n              <p class=\\\"txtLarge\\\">להשלמת התהליך לחץ על כפתור ‘שלח קוד’, וקבל קוד אימות לטלפון הנייד שברשותך, שמספרו\\n                050-xxx6523</p>\\n              <form [formGroup]=\\\"stepForm4\\\" (ngSubmit)=\\\"submitAfterStep4()\\\">\\n                <div class=\\\"checkbox\\\">\\n                  <label>\\n                    <input type=\\\"checkbox\\\" formControlName=\\\"checkbox1\\\" class=\\\"form-control\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': submitted && f4.checkbox1.errors }\\\" class=\\\"filled-in\\\" checked=\\\"checked\\\" />\\n  \\n                    <span>&nbsp;</span><strong>מעוניין בקבלת קוד אימות קולי <br>\\n                      בשיחה נכנסת</strong> </label>\\n                </div>\\n                <div *ngIf=\\\"submitted && f4.checkbox1.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f4.checkbox1.errors.required\\\">please select the checkbox</div>\\n                </div>\\n\\n\\n                <div class=\\\"checkbox\\\">\\n                    <label>\\n                      <input type=\\\"checkbox\\\" formControlName=\\\"checkbox2\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f4.checkbox2.errors }\\\" class=\\\"filled-in\\\" checked=\\\"checked\\\" />\\n    \\n                      <span>&nbsp;</span><strong>מעוניין בקבלת קוד אימות קולי <br>\\n                        בשיחה נכנסת</strong> </label>\\n                  </div>\\n                  <div *ngIf=\\\"submitted && f4.checkbox2.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"f4.checkbox2.errors.required\\\">please select the checkbox</div>\\n                    </div>\\n\\n\\n                  <div class=\\\"checkbox\\\">\\n                      <label>\\n                        <input type=\\\"checkbox\\\" formControlName=\\\"checkbox3\\\" class=\\\"form-control\\\"\\n                          [ngClass]=\\\"{ 'is-invalid': submitted && f4.checkbox3.errors }\\\" class=\\\"filled-in\\\" checked=\\\"checked\\\" />\\n      \\n                        <span>&nbsp;</span><strong>מעוניין בקבלת קוד אימות קולי <br>\\n                          בשיחה נכנסת</strong> </label>\\n                    </div>\\n                    <div *ngIf=\\\"submitted && f4.checkbox3.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f4.checkbox3.errors.required\\\">please select the checkbox</div>\\n                      </div>\\n                <!-- <div *ngIf=\\\"submitted && f4.checkbox.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f4.checkbox.errors.required\\\">please select the checkbox</div>\\n                </div> -->\\n                <p class=\\\"text-center\\\">\\n                  <button type=\\\"submit\\\" class=\\\"waves-effect waves-light btn-large\\\"><i class=\\\"material-icons\\\">שלח\\n                      קוד</i></button>\\n                </p>\\n              </form>\\n            </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  stepForm3: FormGroup;\n  stepForm2: FormGroup;\n  stepForm4: FormGroup;\n  step: number = 1;\n  submitted = false;\n  submittedStep2 = false;\n\n  submittedStep3 = false;\n  submittedStep4 = false;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      role: ['', Validators.required],\n      number: ['', Validators.compose([Validators.required, Validators.minLength(9), Validators.maxLength(9)])],\n    });\n\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.step++;\n    if (this.step == 2) this.loginForm.addControl('proposalNumber', new FormControl('', Validators.required));\n    this.stepForm2 = this.formBuilder.group({\n      checkbox: ['', Validators.required],\n    });\n    // console.log(this.step)\n\n    console.log(this.loginForm.value)\n  }\n\n  get f2() { return this.stepForm2.controls; }\n\n  submitAfterStep2() {\n    this.submittedStep2 = true;\n    if (this.stepForm2.invalid) {\n      return;\n    }\n\n    this.step++;\n    this.stepForm3 = this.formBuilder.group({\n      verificationCode: ['', Validators.required],\n    });\n    // console.log(this.step)\n\n    console.log(this.stepForm2.value)\n  }\n\n\n  get f3() { return this.stepForm3.controls; }\n\n  submitAfterStep3() {\n    this.submittedStep3 = true;\n    if (this.stepForm3.invalid) {\n      return;\n    }\n\n    this.step++;\n    this.stepForm4 = this.formBuilder.group({\n      checkbox1: ['', Validators.required],\n      checkbox2: ['', Validators.required],\n      checkbox3: ['', Validators.required],\n\n    });\n\n    // console.log(this.step)\n\n    console.log(this.stepForm3.value)\n  }\n\n  get f4() { return this.stepForm4.controls; }\n\n  submitAfterStep4() {\n    this.submittedStep4 = true;\n    if (this.stepForm4.invalid) {\n      return;\n    }\n\n    this.step++;\n\n   console.log(\"all form fields => \",Object.assign(this.loginForm.value,this.stepForm2.value,this.stepForm3.value,this.stepForm4.value))\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}